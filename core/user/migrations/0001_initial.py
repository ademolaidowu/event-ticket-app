# Generated by Django 4.0.10 on 2023-02-23 05:21

import core.user.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(db_index=True, help_text='Enter email address', max_length=100, unique=True, verbose_name='Email')),
                ('username', models.CharField(db_index=True, help_text='Username must be unique', max_length=50, unique=True, verbose_name='Username')),
                ('first_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='Last name')),
                ('user_id', models.CharField(db_index=True, default=core.user.models.generate_user_uuid, editable=False, max_length=15, verbose_name='User UUID')),
                ('is_staff', models.BooleanField(default=False, help_text='Select to grant user staff privileges')),
                ('is_admin', models.BooleanField(default=False, help_text='Select to grant user admin privileges')),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False, help_text='Select to activate user account')),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'User Data',
                'ordering': ['-date_joined'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, choices=[('enabled', 'Enabled'), ('blocked', 'Blocked')], default='enabled', max_length=10, null=True, verbose_name='Account Status')),
                ('phone_number', models.CharField(blank=True, max_length=16, null=True, verbose_name='Mobile number')),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('others', 'Others')], default='others', max_length=50, null=True, verbose_name='Gender')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address')),
                ('city', models.CharField(blank=True, max_length=50, null=True, verbose_name='State/City')),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, null=True)),
                ('user_plan', models.CharField(choices=[('freemium', 'Free'), ('premium', 'Paid')], default='freemium', max_length=50, verbose_name='User Plan')),
                ('user_type', models.CharField(choices=[('personal', 'Personal'), ('organization', 'Organization')], default='personal', max_length=50, verbose_name='Account Type')),
                ('business_id', models.CharField(blank=True, help_text='Provide Registration Number if account type is organization', max_length=20, null=True, verbose_name='Business Registration Number')),
                ('is_verified', models.BooleanField(default=False, help_text='Select to grant user popularity verification')),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
                'ordering': ['-date_joined'],
            },
        ),
    ]
